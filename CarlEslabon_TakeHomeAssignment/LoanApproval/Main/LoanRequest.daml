module LoanApproval.Main.LoanRequest where

import DA.Optional

import LoanApproval.Main.Loan
import LoanApproval.Model.LoanApprovalModel
import LoanApproval.Util.LoanRequestUtil
import LoanApproval.Util.LoanRequestValidation

template LoanRequest
  with
    borrower : Party
    bank : Party
    loanReqId: Text
    loan : LoanDetails
    borrowerInfo : BorrowerDetails
    status: Text
    currentDate : Optional Date

  where
    signatory borrower
    observer bank

    key (bank, borrower, loanReqId, status) : LoanRequestKey
    maintainer key._2

    choice ApproveRequest : ContractId Loan
      controller bank
      do
        validateLoanRequestProcess borrower bank borrowerInfo loan

        loanId <- generateLoanId borrower
        currentDate <- generateCurrentDateUTC

        isLoanAvailCid <- lookupByKey @Loan (bank, borrower, loanId)

        if isSome isLoanAvailCid then
          do
            loanId <- generateLoanId borrower
            create Loan with ..
        else
          do
            create Loan with ..

    choice RejectRequest : ()
      controller bank
      do
        return ()